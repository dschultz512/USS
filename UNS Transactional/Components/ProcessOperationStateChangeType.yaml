components:

  schemas:
    ProcessBatchProductionRecordType:
      type: object
      properties:
        '@releaseID':
          type: string
          description: Interface release ID.
          examples:
            - 1.0.0
        # '@versionID':
        #   type: string
        ApplicationArea:
          $ref: './CommonTypes.yaml#/components/schemas/TransApplicationAreaType'
        DataArea:
          type: object
          description: Message data to be exchanged
          properties:
            Process:
              $ref: './CommonTypes.yaml#/components/schemas/TransProcessType'
            BatchProductionRecord:
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/BatchProductionRecordEntryType'
          required:
            - Process
      required:
        - '@releaseID'
        - ApplicationArea
        - DataArea

    BatchProductionRecordEntryType:
      type: object
      properties:
        ID:
          type: string
          description: A unique identification of the BPR. Set to '-1' if unkown.
        EntryID:
          type: string
          description: A unique identification of the BPR individual element. Set to '-1' in unkown.
        ObjectType:
          type: string
          description: |
            Identifies the type of object an entry is based upon. This may be either a standard type or an application specific extended type.
            <b>For this message the value 'Event' is used.</b>
          enum: ["Batch Production Record","Change","Comment","Control Recipe","Data Set","Event","Master Recipe","Personnel Identification Manifest","Resource Definition Manifest","Recipe Element","Sample","Sample Test","Sample Test Result","Work Directive","Work Master","Work Performance","Work Schedule","Other"]
          example: "Event"
        # TimeStamp:
        #   type: string
        #   description: The optional time stamp associated with the entry.
        #   format: datetime
        # ExternalReference:
        #   type: string
        #   description: Contains an optional reference to data which is stored external to the BPR.
        # Description:
        #   type: array
        #   description: Additional optional additional information about the BPR.
        #   items:
        #     type: string
        # EquipmentID:
        #   type: array
        #   description: The equipment hierarchy scope of the data associated with BPR. This information represents the physical structure of the BPR to identify its context within the plant physical hierarchy.
        #   items:
        #     type: string
        #     description: "Equipment hierarchy. Each item is optional, if not filled in the pipe will be empty. {Site}|{Area}|{Work Cell}|{Work Unit}|{Equipment Module}|{Control Module}"
        # CampaignID:
        #   type: string
        #   description: An identification of the campaign/WO associated with the BPR.
        #   example: CampaignID
        # BatchID:
        #   type: string
        #   examples:
        #     - 1008108-50075-25APR2022OQ1-0080-202205212911
        LotID:
          type: string
          description: The unique Lot ID to be used for the sub-assembly.
        # Comments:
        #   type: object
        #   properties:
        #     Comment:
        #       type: array
        #       items:
        #         $ref: '#/components/schemas/CommentType'
        Events:
          $ref: '#/components/schemas/EventsType'
        # PersonnelIdentification:
        #   type: object
        #   properties:
        #     PersonnelIdentificationManifest:
        #       type: array
        #       items:
        #         $ref: '#/components/schemas/PersonnelIdentificationManifestType'
      required:
        - ID
        - EntryID
        - ObjectType
        # - CampaignID
        - LotID
        - Events

    EventsType:
      type: object
      description: Container type for Event elements. 
      properties:
        Event:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/SingleEventType'
      required:
        - Event

    SingleEventType:
      type: object
      description: Describes an event.  The event contains an EventType, EventSubType,,and value. The associated meaning of the event type, subtype, value, and previous value are specified in ANSI/ISA 88.04 and IEC 61512-4.
      properties:
        EntryID:
          type: string
          description: A unique identification of the BPR individual element. Set to '-1' in unkown.
        ObjectType:
          type: string
          description: |
            Identifies the type of object an entry is based upon. This may be either a standard type or an application specific extended type.
            <b>For this message the value 'Event' is used.</b>
          enum: ["Batch Production Record","Change","Comment","Control Recipe","Data Set","Event","Master Recipe","Personnel Identification Manifest","Resource Definition Manifest","Recipe Element","Sample","Sample Test","Sample Test Result","Work Directive","Work Master","Work Performance","Work Schedule","Other"]
        # TimeStamp:
        #   type: string
        #   format: datetime
        # ExternalReference:
        #   type: string
        # Description:
        #   type: array
        #   items:
        #     type: string
        EventType:
          $ref: '#/components/schemas/EventTypeType'
        EventSubType:
          $ref: '#/components/schemas/EventSubTypeType'
        # EquipmentID:
        #   type: array
        #   items:
        #     type: string
        #     description: Defines the equipment associated with the event.
        Value:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ValueType'
        # PreviousValue:
        #   type: array
        #   items:
        #     $ref: './CommonTypes.yaml#/components/schemas/ValueType'
        # MessageText:
        #   type: array
        #   items:
        #     type: string
        # PersonID:
        #   type: array
        #   items:
        #     type: string
        # ComputerID:
        #   type: array
        #   items:
        #     type: string
        # PhysicalAssetID:
        #   type: array
        #   items:
        #     type: string
        # ProceduralElementReference:
        #   type: array
        #   items:
        #     type: string
        # Category:
        #   type: array
        #   items:
        #     type: string
        # AlarmData: 
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/AlarmDataType'
        # AssociatedEventID:
        #   type: array
        #   items:
        #     type: string
        # UserAttribute:
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/UserAttributeType' 
      required:
        - EntryID
        - ObjectType
        - EventType
        - EventSubType

    EventTypeType:
      oneOf:
        - $ref: '#/components/schemas/EventType1Type'
        # - type: object
        #   properties:
        #     '$':
        #       $ref: '#/components/schemas/EventType1Type'
        #     '@OtherValue':
        #       type: string

    EventType1Type:
      type: string
      description: |
        Defines an event type. The associated meaning of the event type, subtype, value, and previous value are specified in ANSI/ISA 88.04 and IEC 61512-4. This may be either a standard type or an application specific extended type.  Standard enumerations correspond to the BPR element types. If “Other” then the type is an application specific extension and the value is defined in the attribute 'OtherValue'.
        <b>For this message the value 'Procedural Execution' is used.</b>
      enum: [Alarm, Control Recipe, Equipment, General, Material, Message, Operator, Procedural Execution, Other]

    EventSubTypeType:
      oneOf:
        - $ref: '#/components/schemas/EventSubType1Type'
        # - type: object
        #   properties:
        #     '$':
        #       $ref: '#/components/schemas/EventSubType1Type'
        #     '@OtherValue':
        #       type: string

    EventSubType1Type:
      type: string
      description: |
        Defines an event type. The associated meaning of the event type, subtype, value, and previous value are specified in ANSI/ISA 88.04 and IEC 61512-4. This may be either a standard type or an application specific extended type.  Standard enumerations correspond to the BPR element types. If “Other” then the type is an application specific extension and the value is defined in the attribute 'OtherValue'.
        <b>For this message the value 'State Change' is used.</b>
      enum: [Allocation,Application,Consume,Deallocation,Equipment,Message,Mode Change,Mode Command,Modification,Movement,Parameter Data,Process,Process Data,Produce,Prompt,Prompt Response,Property Value Change,Reconciliation,Security,State Change,State Command,Status Change,System,Target End Time,Target Start Time,Other]

    AlarmDataType:
      type: object
      properties:
        AlarmEvent:
          description: 'Defines the type of alarm event. Standard identifiers are not defined.  Examples: Detected, Acknowledged, and Cleared.'
          type: string
        AlarmType:
          description: 'Defines the type of alarm. Standard identifiers are not defined.  Examples: High, Deviation, Rate of Change.'
          type: string
        AlarmLimit:
          description: 'Defines the value measurement that caused the alarm event.'
          type: array
          items:
            $ref: './CommonTypes.yaml#/components/schemas/ValueType'
        Priority:
          description: 'Defines the importance of the event.  Standard identifiers are not defined.  Examples: High, Low, 10, 9,8, 0 …'
          type: array
          items:
            type: string  
      required:
        - AlarmEvent
        - AlarmType

    UserAttributeType:
      type: object
      properties:
        AttributeID:
          type: string
        Description:
          type: array
          items: 
            type: string
        Value:
          type: array
          items:
            $ref: './CommonTypes.yaml#/components/schemas/ValueType'

    PersonnelIdentificationManifestType:
      type: object
      properties:
        EntryID:
          type: string
          description: A unique identification of the BPR individual element.  
        ObjectType:
          $ref: '#/components/schemas/RecordObjectTypeType'
          description: Identifies the type of object an entry is based upon. 
        TimeStamp:
          type: string
          format: datetime
          description: The optional time stamp associated with the entry.
        ExternalReference:
          type: string
          description: Contains an optional reference to data which is stored external to the BPR.
        Description:
          type: array
          description: Additional optional additional information about the BPR.
          items:
            type: string
        RecordReference:
          type: string
        Name:
          type: array
          description: Defines the name of the person.
          items:
            type: string
        ChangeIndication:
          type: string
          description: 'An indication enabling detection that the PersonnelIdentificationManifest element has not been altered. Example: string generated by an MD5 hash algorithm of the name, record reference, and reason.'
        Reason:
          type: string
          description: Defines the reason for the signature. 
      required:
        - EntryID
        - ObjectType
        - ChangeIndication
        

    RecordObjectTypeType:
      oneOf:
        - $ref: '#/components/schemas/RecordObjectType1Type'
        - type: object
          properties:
            '$':
              $ref: '#/components/schemas/RecordObjectType1Type'
            '@OtherValue':
              type: string

    RecordObjectType1Type:
      type: string
      description: If “Other” then the type is an application specific extension and the value is defined in the attribute “OtherValue”.
      enum: ["Batch Production Record","Change","Comment","Control Recipe","Data Set","Event","Master Recipe","Personnel Identification Manifest","Resource Definition Manifest","Recipe Element","Sample","Sample Test","Sample Test Result","Work Directive","Work Master","Work Performance","Work Schedule","Other"]

    CommentType:
      type: object
      properties:
        EntryID:
          type: string
          description: A unique identification of the BPR individual element.  
        ObjectType:
          $ref: '#/components/schemas/RecordObjectTypeType'
          description: Identifies the type of object an entry is based upon. 
        TimeStamp:
          type: string
          format: datetime
          description: The optional time stamp associated with the entry.
        ExternalReference:
          type: string
          description: Contains an optional reference to data which is stored external to the BPR.
        Description:
          type: array
          description: Additional optional additional information about the BPR.
          items:
            type: string
        RecordReference:
          type: string
          description: The EntryID of a specific element in the BPR.
        CommentText:
          type: array
          description: The text comment
          items:
            type: string
        PersonID:
          type: string
          description: Defines the person associated with the comment. 
      required:
        - EntryID
        - ObjectType
        - RecordReference


    ValueType:
      type: object
      description: |
        <b>This message requires one value.</b>
        1. Operation state:
          - Key: NewState
          - DataType: String
          - Value: "Running" or "Completed"
      properties:
        ValueString:
          type: string
          description: Defines the value of the data element.
        DataType:
          type: string
          enum: [Amount, BinaryObject, Code, DateTime, Identifier, Indicator, Measure, Numeric, Quantity, Text, string, byte, unsignedByte, binary, integer, positiveInteger, negativeInteger, nonNegativeInteger, nonPositiveInteger, int, unsignedInt, long, unsignedLong, short, unsignedShort, decimal, float, double, boolean, time, timeInstant, timePeriod, duration, date, dateTime, month, year, century, recurringDay, recurringDate, recurringDuration, Name, QName, NCName, uriReference, language, ID, IDREF, IDREFS, ENTITY, ENTITIES, NOTATION, NMTOKEN, NMTOKENS, Enumeration, SVG, Other]
          examples:
            - string
            - integer
        # UnitOfMeasure:
        #   type: string
        Key:
          type: string
          description: Defines a unique identification of a data element.
      required:
        - ValueString
        - Key